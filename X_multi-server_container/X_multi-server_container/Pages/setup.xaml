<Page x:Class="X_multi_server_container.Pages.Setup"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:X_multi_server_container.Pages"
      mc:Ignorable="d"
      xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
      xmlns:model="clr-namespace:X_multi_server_container.Pages"
      d:DesignHeight="450" d:DesignWidth="800"   FontFamily="Microsoft YaHei"
   
      Title="setup">
    <Page.Resources>
        <Style TargetType="Button" x:Key="TEST" BasedOn="{StaticResource ButtonRevealStyle}">
            <Style.Triggers>
                <EventTrigger RoutedEvent="Button.Loaded">
                    <BeginStoryboard>
                        <Storyboard>
                            <ColorAnimationUsingKeyFrames RepeatBehavior="Forever"  AutoReverse="True"  Storyboard.TargetProperty="Foreground.Color">
                                 <EasingColorKeyFrame KeyTime="0:0:2" Value="#FF79FF79">
                                    <EasingColorKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingColorKeyFrame.EasingFunction>
                                </EasingColorKeyFrame>
                                <EasingColorKeyFrame KeyTime="0:0:4" Value="#FF82E0FF">
                                    <EasingColorKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingColorKeyFrame.EasingFunction>
                                </EasingColorKeyFrame>
                                <EasingColorKeyFrame KeyTime="0:0:6" Value="#FFFF7777">
                                    <EasingColorKeyFrame.EasingFunction>
                                        <CubicEase EasingMode="EaseOut"/>
                                    </EasingColorKeyFrame.EasingFunction>
                                </EasingColorKeyFrame>
                            </ColorAnimationUsingKeyFrames>
                            <!--<ColorAnimation Duration="0:0:3"  Storyboard.TargetProperty="Foreground.Color"
                                      AutoReverse="True"  RepeatBehavior="Forever" From="#FF35F6FF" To="#FFF5FF21">
                                <ColorAnimation.EasingFunction>
                                    <BackEase EasingMode="EaseOut"/>
                                </ColorAnimation.EasingFunction>
                            </ColorAnimation>-->
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="Foreground" Value="Wheat" />
        </Style>
        <!--#region ListViewItem-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#3FFFFFFF"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#3FFFFFFF"/>
        <Style TargetType="{x:Type ListViewItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border Margin="0,0,0,2" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{x:Static fw:AccentColors.ImmersiveSystemAccentDark1Brush}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{x:Static fw:AccentColors.ImmersiveSystemAccentDark1Brush}"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{x:Static fw:AccentColors.ImmersiveSystemAccentBrush}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{x:Static fw:AccentColors.ImmersiveSystemAccentBrush}"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--#endregion -->
        <!--region 滚动条 -->
        <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="#FF404040"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="#FF404040"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="#FF404040"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="#505050"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="#A3A3A3"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="#505050"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="#FF404040"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="#FF404040"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#787878"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#787878"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="#FF404040"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="#FF404040"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="#AAAAAB"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="#8D8D8E"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="#4CFFFFFF"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Thumb.Border" Color="#4CFFFFFF"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb.Border" Color="#9A9A9A"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb.Border" Color="#787878"/>
        <Style TargetType="{x:Type ScrollViewer}" x:Key="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="{x:Type ScrollViewer}">
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource ScrollBarStyle1}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>

        <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="border" BorderBrush="{DynamicResource ScrollBar.Static.Border}" BorderThickness="1" Background="{DynamicResource ScrollBar.Static.Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="false"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="border" Value="#FF404040"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF404040"/>
                            </MultiDataTrigger>


                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="true"/>
                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsEnabled}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="aythumbborder" BorderBrush="{StaticResource ScrollBar.Static.Thumb.Border}" BorderThickness="1" Margin="4,2">
                            <Rectangle x:Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="11"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                                <Setter Property="BorderBrush" TargetName="aythumbborder" Value="{StaticResource ScrollBar.MouseOver.Thumb.Border}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                                <Setter Property="BorderBrush" TargetName="aythumbborder" Value="{StaticResource ScrollBar.Pressed.Thumb.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="ayhorthumbborder" BorderBrush="{StaticResource ScrollBar.Static.Thumb.Border}" BorderThickness="1" Margin="2,2">
                            <Rectangle x:Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="11"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                                <Setter Property="BorderBrush" TargetName="ayhorthumbborder" Value="{StaticResource ScrollBar.MouseOver.Thumb.Border}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                                <Setter Property="BorderBrush" TargetName="ayhorthumbborder" Value="{StaticResource ScrollBar.Pressed.Thumb.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarStyle1" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1,0"/>
            <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true" Width="17">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                <RowDefinition Height="0.00001*"/>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            </Grid.RowDefinitions>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
                            <RepeatButton x:Name="PART_LineUpButton"  Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" >
                                <Path x:Name="ArrowTop" Data="M185,24 L181.125,27.875 188.75,27.875 z" Stretch="Uniform" Fill="#A3A3A3" Width="9" Height="9" Margin="0,0,0,0"  RenderTransformOrigin="0.5,0.5">
                                </Path>

                            </RepeatButton>
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
                                </Track.Thumb>
                            </Track>
                            <RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton}">
                                <Path x:Name="ArrowBottom" Data="M185,24 L181.125,27.875 188.75,27.875 z" Stretch="Uniform" Fill="#FFA3A3A3" Width="9" Height="9" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="180"/>
                                    </Path.RenderTransform>
                                </Path>
                            </RepeatButton>
                        </Grid>
                        <ControlTemplate.Triggers>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="BorderThickness" Value="0,1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                        <ColumnDefinition Width="0.00001*"/>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    </Grid.ColumnDefinitions>
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1"/>
                                    <RepeatButton x:Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">

                                        <Path x:Name="ArrowLeft" Data="M185,24 L181.125,27.875 188.75,27.875 z" Stretch="Uniform" Fill="#FFA3A3A3" Width="9" Height="9" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <RotateTransform Angle="270"/>

                                            </Path.RenderTransform>
                                        </Path>
                                    </RepeatButton>
                                    <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbHorizontal}"/>
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">

                                        <Path x:Name="ArrowRight" Data="M185,24 L181.125,27.875 188.75,27.875 z" Stretch="Uniform" Fill="#FFA3A3A3" Width="9" Height="9" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <RotateTransform Angle="90"/>

                                            </Path.RenderTransform>
                                        </Path>

                                    </RepeatButton>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                    </MultiDataTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <!--endregion 滚动条 -->
    </Page.Resources>
    <Grid>
        <Button Style="{StaticResource TEST}" Visibility="Hidden"/>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="15" x:Name="PaddingModel"/>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="{Binding Path=Width,ElementName=PaddingModel,Mode=OneTime}"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="{Binding Path=Width,ElementName=PaddingModel,Mode=OneTime}"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="{Binding Path=Width,ElementName=PaddingModel,Mode=OneTime}"/>
                    <RowDefinition Height="31*"/>
                    <RowDefinition Height="10"/>
                    <RowDefinition Height="51*"/>
                    <RowDefinition Height="{Binding Path=Width,ElementName=PaddingModel,Mode=OneTime}"/>
                </Grid.RowDefinitions>
                <!--#region 左上分区 -->
                <Grid Grid.Row="1">
                    <TextBlock Margin="5" FontSize="30" Foreground="SkyBlue" DockPanel.Dock="Top"><Run Text="入"/><Run Text="门"/></TextBlock>
                    <Grid>

                    </Grid>
                </Grid>
                <!--#endregion-->
                <!--#region 左下分区 -->
                <fw:AcrylicPanel Grid.Row="3">
                    <Grid>
                        <Border x:Name="receItemWidth" Height="1" VerticalAlignment="Top" >
                            <Border.Background>
                                <SolidColorBrush Color="{DynamicResource {x:Static SystemColors.ActiveBorderColorKey}}"/>
                            </Border.Background>
                        </Border>
                        <TextBlock Text="最近" Margin="5" FontSize="30" Foreground="SkyBlue" DockPanel.Dock="Top" HorizontalAlignment="Left" VerticalAlignment="Top"/>
                        <ListView x:Name="recentListView"   MouseDoubleClick="recentListView_PreviewMouseDoubleClick" Style="{StaticResource ListBoxRevealStyle}" Background="{x:Null}" BorderBrush="{x:Null}" Margin="10,52,10,10" ScrollViewer.HorizontalScrollBarVisibility="Hidden">
                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel Orientation="Vertical" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid Width="{Binding ElementName=receItemWidth,Path=ActualWidth,Mode=OneWay}">
                                        <Grid  Height="50" Margin="0,0,50,0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                            </Grid.ColumnDefinitions>
                                            <DockPanel Margin="10,0,0,0"  >
                                                <TextBlock Text="&#xE990;" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Segoe MDL2 Assets" Foreground="Wheat" FontSize="32"/>
                                                <StackPanel Margin="10,5,0,5">
                                                    <TextBlock Text="{Binding Path=title}"  Foreground="Wheat" FontSize="18"/>
                                                    <TextBlock Text="{Binding Path=subtitle}"  Foreground="Wheat" FontSize="12"/>
                                                </StackPanel>
                                            </DockPanel>
                                            <Button   Grid.Column="1"  Tag="{Binding Path=uuid}" Content="&#xE711;"   Padding="0" Width="30" VerticalAlignment="Stretch" Style="{StaticResource ButtonRevealStyle}" Background="Transparent" BorderBrush="Transparent" FontFamily="Segoe MDL2 Assets" Height="30" Click="DelectRecentButton_Click"/>
                                        </Grid>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                            <!--<model:HistoryModel subtitle="运行当前目录下的mc_start.bat" StartINFO="233" title="相对路径快速启动"/>-->
                        </ListView>
                    </Grid>
                </fw:AcrylicPanel>
                <!--#endregion-->
            </Grid>
            <Grid Grid.Column="3">
                <Grid.RowDefinitions>
                    <RowDefinition Height="{Binding Path=Width,ElementName=PaddingModel,Mode=OneTime}"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="{Binding Path=Width,ElementName=PaddingModel,Mode=OneTime}"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="{Binding Path=Width,ElementName=PaddingModel,Mode=OneTime}"/>
                </Grid.RowDefinitions>
                <!--#region 右上分区 -->
                <fw:AcrylicPanel Grid.Row="1">
                    <DockPanel>
                        <Border DockPanel.Dock="Top" Height="1" Background="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"/>
                        <DockPanel Margin="10,0">
                            <TextBlock DockPanel.Dock="Top" Text="打开启动方案" FontSize="25" Foreground="SkyBlue"/>
                            <TextBlock DockPanel.Dock="Top"  Grid.Row="1" Foreground="#E5FFFFFF"   FontSize="14"><Run Text="打开某个对象"/><Run Text="以启动你的服务端"/></TextBlock>
                            <Border DockPanel.Dock="Top" Height="1" Margin="0,2"  Background="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"/>
                            <StackPanel>
                                <!--<Button Style="{StaticResource ButtonRevealStyle}" x:Name="button" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="White" HorizontalContentAlignment="Left" VerticalContentAlignment="Center" VerticalAlignment="Top" Padding="0" FontSize="18">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE729;" FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        <TextBlock Text=" 打开服务端所在文件夹" FontSize="14"/>
                                    </StackPanel>
                                </Button>-->
                                <Button Style="{StaticResource ButtonRevealStyle}" x:Name="OpenSlnButton" Background="{x:Null}" BorderBrush="{x:Null}" Foreground="White" HorizontalContentAlignment="Left"   Padding="2,0" FontSize="18" Click="OpenSlnButton_Click" Grid.Row="1">
                                    <StackPanel Orientation="Horizontal">
                                        <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xED41;" FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                        <TextBlock FontSize="14"><Run Text=" 打开"/><Run Text=" /"/><Run Text=" 编辑"/><Run Text="启动"/><Run Text="方案"/></TextBlock>
                                    </StackPanel>
                                </Button>
                            </StackPanel>
                        </DockPanel>
                    </DockPanel>
                </fw:AcrylicPanel>
                <!--#endregion-->
                <!--#region 右下分区 -->
                <fw:AcrylicPanel Grid.Row="3">
                    <DockPanel>
                        <Border DockPanel.Dock="Top" Height="1" Margin="0"  Background="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"/>
                        <DockPanel Margin="10,0">
                            <TextBlock DockPanel.Dock="Top" Text="新建启动方案"  FontSize="25" Foreground="SkyBlue" />
                            <TextBlock DockPanel.Dock="Top" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#E5FFFFFF" FontSize="14" Text="方案模板" />
                            <Border DockPanel.Dock="Top" Height="1" Margin="0,2"  Background="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"/>
                            <StackPanel  DockPanel.Dock="Top"  ScrollViewer.VerticalScrollBarVisibility="Auto">
                                <!--<Button HorizontalContentAlignment="Left" Style="{StaticResource ButtonRevealStyle}"  Background="{x:Null}" BorderBrush="{x:Null}" Foreground="White"  Padding="0" FontSize="18">
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE756;" FontSize="16"   VerticalAlignment="Center"/>
                                    <TextBlock Text=" 基于java核心的启动方案模板" FontSize="13"/>
                                </StackPanel>
                            </Button>-->
                                <Button HorizontalContentAlignment="Left" Style="{StaticResource ButtonRevealStyle}"   Background="{x:Null}" BorderBrush="{x:Null}" Foreground="White"  Padding="2,0" FontSize="18" Click="BDSTemplateButton_Click">
                                    <DockPanel>
                                        <TextBlock FontFamily="Segoe MDL2 Assets" Text="&#xE756;" FontSize="16"  VerticalAlignment="Center"/>
                                        <TextBlock Text=" 基于BDS核心的启动方案模板" FontSize="13"/>
                                    </DockPanel>
                                </Button>
                            </StackPanel>
                        </DockPanel>
                    </DockPanel>
                </fw:AcrylicPanel>
                <!--#endregion-->
            </Grid>
        </Grid>
    </Grid>
</Page>
