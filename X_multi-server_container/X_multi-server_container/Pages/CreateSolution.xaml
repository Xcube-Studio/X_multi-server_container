<Page
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:X_multi_server_container.Pages"
    xmlns:fw="clr-namespace:SourceChord.FluentWPF;assembly=FluentWPF"
    xmlns:Animations="clr-namespace:SourceChord.FluentWPF.Animations;assembly=FluentWPF" xmlns:System="clr-namespace:System;assembly=mscorlib" xmlns:Converters="clr-namespace:SourceChord.FluentWPF.Converters;assembly=FluentWPF" x:Class="X_multi_server_container.Pages.CreateSolution"
    mc:Ignorable="d" 
      d:DesignHeight="650" d:DesignWidth="400"
      Title="CreateSolution">
    <Page.Resources>
        <Style TargetType="{x:Type ComboBox}"  >
            <Setter Property="Margin" Value="2" />
        </Style>
        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="Margin" Value="2" />
            <Setter Property="Foreground" Value="Wheat" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="FontSize" Value="14" />
        </Style>
        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxRevealStyle}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="Padding" Value="2" />
        </Style>
        <Style   TargetType="{x:Type Button}"  BasedOn="{StaticResource ButtonRevealStyle}">
            <Setter Property="Padding" Value="8,2" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Margin" Value="2" />
            <Setter Property="Foreground" Value="SkyBlue" />
            <!--<Setter Property="Background" Value="#39C7FFE1"/>-->
            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="BorderBrush"  Value="Red"/>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="{x:Type CheckBox}">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Margin" Value="0,2,0,0" />
            <Setter Property="Content">
                <Setter.Value>
                    <TextBlock Text="已关闭" Margin="0,-1,0,0" Foreground="Beige"/>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Trigger.Setters>
                        <Setter Property="Content"   >
                            <Setter.Value>
                                <TextBlock Text="已开启" Margin="0,-1,0,0" Foreground="Beige"/>
                            </Setter.Value>
                        </Setter>
                    </Trigger.Setters>
                </Trigger>

            </Style.Triggers>
        </Style>
        <!--#endregion -->
        <!--<Style  TargetType="{x:Type ItemsPresenter}">
            <Setter Property="ItemsControl.HorizontalAlignment" Value="Center" />
        </Style>-->
        <!--endregion 滚动条 -->
        <!--#region ListViewItem-->
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#3FFFFFFF"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#3FFFFFFF"/>
        <Style TargetType="{x:Type ListViewItem}" >
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListViewItem}">
                        <Border Margin="0,0,0,2" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--region 滚动条 -->
        <SolidColorBrush x:Key="ScrollBar.Static.Background" Color="#FF404040"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Border" Color="#FF404040"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Glyph" Color="#FF404040"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Glyph" Color="#505050"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Glyph" Color="#A3A3A3"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Glyph" Color="#505050"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Background" Color="#FF404040"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Border" Color="#FF404040"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Background" Color="#787878"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Border" Color="#787878"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Background" Color="#FF404040"/>
        <SolidColorBrush x:Key="ScrollBar.Disabled.Border" Color="#FF404040"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb" Color="#AAAAAB"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb" Color="#8D8D8E"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Thumb" Color="#4CFFFFFF"/>
        <SolidColorBrush x:Key="ScrollBar.Static.Thumb.Border" Color="#4CFFFFFF"/>
        <SolidColorBrush x:Key="ScrollBar.MouseOver.Thumb.Border" Color="#9A9A9A"/>
        <SolidColorBrush x:Key="ScrollBar.Pressed.Thumb.Border" Color="#787878"/>
        <Style TargetType="{x:Type ScrollViewer}" x:Key="{x:Type ScrollViewer}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="{x:Type ScrollViewer}">
                        <Grid x:Name="Grid" Background="{TemplateBinding Background}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <Rectangle x:Name="Corner" Grid.Column="1" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" Grid.Row="1"/>
                            <ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" CanHorizontallyScroll="False" CanVerticallyScroll="False" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Grid.Column="0" Margin="{TemplateBinding Padding}" Grid.Row="0"/>
                            <ScrollBar x:Name="PART_VerticalScrollBar" AutomationProperties.AutomationId="VerticalScrollBar" Cursor="Arrow" Grid.Column="1" Maximum="{TemplateBinding ScrollableHeight}" Minimum="0" Grid.Row="0" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}" Style="{DynamicResource ScrollBarStyle1}"/>
                            <ScrollBar x:Name="PART_HorizontalScrollBar" AutomationProperties.AutomationId="HorizontalScrollBar" Cursor="Arrow" Grid.Column="0" Maximum="{TemplateBinding ScrollableWidth}" Minimum="0" Orientation="Horizontal" Grid.Row="1" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

        </Style>
        <Style x:Key="ScrollBarButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border x:Name="border" BorderBrush="{DynamicResource ScrollBar.Static.Border}" BorderThickness="1" Background="{DynamicResource ScrollBar.Static.Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="border" Value="#FF404040"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF404040"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.56"/>
                                <Setter Property="Background" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource ScrollBar.Disabled.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="RepeatButtonTransparent" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="{TemplateBinding Background}" Height="{TemplateBinding Height}" Width="{TemplateBinding Width}"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumbVertical" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="aythumbborder" BorderBrush="{StaticResource ScrollBar.Static.Thumb.Border}" BorderThickness="1" Margin="4,2">
                            <Rectangle x:Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="11"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                                <Setter Property="BorderBrush" TargetName="aythumbborder" Value="{StaticResource ScrollBar.MouseOver.Thumb.Border}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                                <Setter Property="BorderBrush" TargetName="aythumbborder" Value="{StaticResource ScrollBar.Pressed.Thumb.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarThumbHorizontal" TargetType="{x:Type Thumb}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border x:Name="ayhorthumbborder" BorderBrush="{StaticResource ScrollBar.Static.Thumb.Border}" BorderThickness="1" Margin="2,2">
                            <Rectangle x:Name="rectangle" Fill="{StaticResource ScrollBar.Static.Thumb}" Height="{TemplateBinding Height}" SnapsToDevicePixels="True" Width="11"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.MouseOver.Thumb}"/>
                                <Setter Property="BorderBrush" TargetName="ayhorthumbborder" Value="{StaticResource ScrollBar.MouseOver.Thumb.Border}"/>
                            </Trigger>
                            <Trigger Property="IsDragging" Value="true">
                                <Setter Property="Fill" TargetName="rectangle" Value="{StaticResource ScrollBar.Pressed.Thumb}"/>
                                <Setter Property="BorderBrush" TargetName="ayhorthumbborder" Value="{StaticResource ScrollBar.Pressed.Thumb.Border}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ScrollBarStyle1" TargetType="{x:Type ScrollBar}">
            <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>
            <Setter Property="Background" Value="{StaticResource ScrollBar.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ScrollBar.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1,0"/>
            <Setter Property="Width" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="MinWidth" Value="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollBar}">
                        <Grid x:Name="Bg" SnapsToDevicePixels="true" Width="17">
                            <Grid.RowDefinitions>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                                <RowDefinition Height="0.00001*"/>
                                <RowDefinition MaxHeight="{DynamicResource {x:Static SystemParameters.VerticalScrollBarButtonHeightKey}}"/>
                            </Grid.RowDefinitions>
                            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Row="1"/>
                            <RepeatButton x:Name="PART_LineUpButton"  Command="{x:Static ScrollBar.LineUpCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}" >
                                <Path x:Name="ArrowTop" Data="M185,24 L181.125,27.875 188.75,27.875 z" Stretch="Uniform" Fill="#A3A3A3" Width="9" Height="9" Margin="0,0,0,0"  RenderTransformOrigin="0.5,0.5"/>

                            </RepeatButton>
                            <Track x:Name="PART_Track" IsDirectionReversed="true" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="1">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageUpCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Command="{x:Static ScrollBar.PageDownCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb Style="{StaticResource ScrollBarThumbVertical}"/>
                                </Track.Thumb>
                            </Track>
                            <RepeatButton x:Name="PART_LineDownButton" Command="{x:Static ScrollBar.LineDownCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Grid.Row="2" Style="{StaticResource ScrollBarButton}">
                                <Path x:Name="ArrowBottom" Data="M185,24 L181.125,27.875 188.75,27.875 z" Stretch="Uniform" Fill="#FFA3A3A3" Width="9" Height="9" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                                    <Path.RenderTransform>
                                        <RotateTransform Angle="180"/>

                                    </Path.RenderTransform>
                                </Path>
                            </RepeatButton>
                        </Grid>
                        <ControlTemplate.Triggers>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineDownButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineDownButton}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineUpButton}" Value="true"/>
                                    <Condition Binding="{Binding IsPressed, ElementName=PART_LineUpButton}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="ArrowTop" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                <Setter Property="Fill" TargetName="ArrowBottom" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="MinWidth" Value="0"/>
                    <Setter Property="Height" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="MinHeight" Value="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarHeightKey}}"/>
                    <Setter Property="BorderThickness" Value="0,1"/>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ScrollBar}">
                                <Grid x:Name="Bg" SnapsToDevicePixels="true">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                        <ColumnDefinition Width="0.00001*"/>
                                        <ColumnDefinition MaxWidth="{DynamicResource {x:Static SystemParameters.HorizontalScrollBarButtonWidthKey}}"/>
                                    </Grid.ColumnDefinitions>
                                    <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Grid.Column="1"/>
                                    <RepeatButton x:Name="PART_LineLeftButton" Command="{x:Static ScrollBar.LineLeftCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">

                                        <Path x:Name="ArrowLeft" Data="M185,24 L181.125,27.875 188.75,27.875 z" Stretch="Uniform" Fill="#FFA3A3A3" Width="9" Height="9" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <RotateTransform Angle="270"/>

                                            </Path.RenderTransform>
                                        </Path>
                                    </RepeatButton>
                                    <Track x:Name="PART_Track" Grid.Column="1" IsEnabled="{TemplateBinding IsMouseOver}">
                                        <Track.DecreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageLeftCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.DecreaseRepeatButton>
                                        <Track.IncreaseRepeatButton>
                                            <RepeatButton Command="{x:Static ScrollBar.PageRightCommand}" Style="{StaticResource RepeatButtonTransparent}"/>
                                        </Track.IncreaseRepeatButton>
                                        <Track.Thumb>
                                            <Thumb Style="{StaticResource ScrollBarThumbHorizontal}"/>
                                        </Track.Thumb>
                                    </Track>
                                    <RepeatButton x:Name="PART_LineRightButton" Grid.Column="2" Command="{x:Static ScrollBar.LineRightCommand}" IsEnabled="{TemplateBinding IsMouseOver}" Style="{StaticResource ScrollBarButton}">

                                        <Path x:Name="ArrowRight" Data="M185,24 L181.125,27.875 188.75,27.875 z" Stretch="Uniform" Fill="#FFA3A3A3" Width="9" Height="9" Margin="0,0,0,0" RenderTransformOrigin="0.5,0.5">
                                            <Path.RenderTransform>
                                                <RotateTransform Angle="90"/>

                                            </Path.RenderTransform>
                                        </Path>

                                    </RepeatButton>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="true"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Pressed.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineRightButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineRightButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding IsMouseOver, ElementName=PART_LineLeftButton}" Value="true"/>
                                            <Condition Binding="{Binding IsPressed, ElementName=PART_LineLeftButton}" Value="false"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.MouseOver.Glyph}"/>
                                    </MultiDataTrigger>
                                    <Trigger Property="IsEnabled" Value="false">
                                        <Setter Property="Fill" TargetName="ArrowLeft" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                        <Setter Property="Fill" TargetName="ArrowRight" Value="{StaticResource ScrollBar.Disabled.Glyph}"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style  TargetType="{x:Type ListView}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListView}" >
                        <Grid>
                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="OptionMark.Static.Border" Color="#FF707070"/>
        <Style x:Key="OptionMarkFocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Background" Color="#FFF3F9FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Border" Color="#FF5593FF"/>
        <SolidColorBrush x:Key="OptionMark.MouseOver.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Background" Color="#FFE6E6E6"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Border" Color="#FFBCBCBC"/>
        <SolidColorBrush x:Key="OptionMark.Disabled.Glyph" Color="#FF707070"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Background" Color="#FFD9ECFF"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Border" Color="#FF3C77DD"/>
        <SolidColorBrush x:Key="OptionMark.Pressed.Glyph" Color="#FF212121"/>
        <SolidColorBrush x:Key="OptionMark.Static.Glyph" Color="#FF212121"/>
        <!--#endregion-->
    </Page.Resources>
    <DockPanel Margin="10">
        <TextBlock x:Name="Title" Text="新建启动方案" DockPanel.Dock="Top" FontSize="30"/>
        <TextBlock x:Name="SubTitle" Text="位于" DockPanel.Dock="Top" FontSize="15" Margin="20,0,0,0" Visibility="Collapsed"/>
        <Border DockPanel.Dock="Top" Height="1" Margin="0,5"  Background="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"/>
        <DockPanel DockPanel.Dock="Bottom">
            <Button Content="在新标签页启动" DockPanel.Dock="Right" Click="LaunchInNewTabButton_Click"/>
            <Button Content="保存启动方案" Click="SaveSlnButton_Click"/>
            <Grid/>
        </DockPanel>

        <Border DockPanel.Dock="Bottom" Height="1" Margin="0,5"  Background="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}"/>
        <ScrollViewer VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            <StackPanel>
                <DockPanel>
                    <TextBlock Text="程序路径" DockPanel.Dock="Left"/>
                    <Button Content="选择" DockPanel.Dock="Right"  Click="SelectPathButton_Click"/>
                    <TextBox x:Name="targetPath" />
                </DockPanel>
                <!--#region WS接口-->
                <GroupBox>
                    <GroupBox.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="WebsocketAPI:" FontSize="16"/>
                            <CheckBox  IsChecked="True" x:Name="WSAPIToggle"  >
                                <CheckBox.Triggers>
                                    <EventTrigger RoutedEvent="CheckBox.Checked">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="WebsocketAPIRoot"  Storyboard.TargetProperty="(FrameworkElement.Height)">
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0:0.2" Value="{Binding ActualHeight, ElementName=WebsocketAPIPanel}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="CheckBox.Unchecked">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="WebsocketAPIRoot"  Storyboard.TargetProperty="(FrameworkElement.Height)">
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0:0.0" Value="{Binding ActualHeight, ElementName=WebsocketAPIRoot}"/>
                                                     <LinearDoubleKeyFrame KeyTime="0:0:0:0.2" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </CheckBox.Triggers> 
                            </CheckBox>
                        </StackPanel>
                    </GroupBox.Header>
                    <StackPanel x:Name="WebsocketAPIRoot">
                        <StackPanel x:Name="WebsocketAPIPanel">
                        <DockPanel>
                            <TextBlock Text="预制输出模板"  />
                            <ComboBox x:Name="pubblishedTemplate"  >
                                <ComboBoxItem Content="原版BDS (无法获取聊天输出)" IsSelected="True"/>
                                <ComboBoxItem Content="Element-Zero + (ChatAPI)"/>
                                <ComboBoxItem Content="梦之故里 + Chat.dll"/>
                            </ComboBox>
                        </DockPanel>
                        <DockPanel>
                            <TextBlock Text="Websocket端口(Port)" />
                            <TextBox x:Name="portTB" Text="29132" TextChanged="portTB_TextChanged"/>
                        </DockPanel>
                        <DockPanel>
                            <TextBlock Text="Websocket端点(EndPoint)"  />
                            <TextBox x:Name="endpointTB"  Text="mcws" TextChanged="endpointTB_TextChanged"/>
                        </DockPanel>
                        <DockPanel>
                            <TextBlock Text="WS执行指令交换密匙"  />
                            <TextBox x:Name="wsPwd"  Text="password"/>
                        </DockPanel>
                        <DockPanel HorizontalAlignment="Center">
                            <TextBlock Text="访问地址预览:" HorizontalAlignment="Center"/>
                            <TextBox x:Name="PreviewAddressTB" IsReadOnly="True" Foreground="Yellow" BorderBrush="{x:Null}" Margin="-3" Text="ws://127.0.0.1:29132/mcws" >
                                <TextBox.Background>
                                    <SolidColorBrush  Opacity="0.5" Color="SkyBlue"/>
                                </TextBox.Background>
                            </TextBox>
                        </DockPanel>
                    </StackPanel>
                    </StackPanel>
                </GroupBox>
                <!--#endregion-->
                <!--#endregion-->
                <!--#endregion-->
                <!--#region 日志-->
                <Grid x:Name="widmodel" Margin="50,0"/>

                <GroupBox>
                    <GroupBox.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="日志API:（取自控制台输出）" FontSize="16"/>
                            <CheckBox  x:Name="LogAPIToggle"  >
                                <CheckBox.Triggers>
                                    <EventTrigger RoutedEvent="CheckBox.Checked">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LogSettingRoot"  Storyboard.TargetProperty="(FrameworkElement.Height)">
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0:0.2" Value="{Binding ActualHeight, ElementName=LogSettingPanel}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                    <EventTrigger RoutedEvent="CheckBox.Unchecked">
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LogSettingRoot"  Storyboard.TargetProperty="(FrameworkElement.Height)">
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0:0.2" Value="0"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger>
                                </CheckBox.Triggers>
                            </CheckBox>
                        </StackPanel>
                    </GroupBox.Header>
                    <StackPanel x:Name="LogSettingRoot">
                        <StackPanel x:Name="LogSettingPanel">
                            <DockPanel>
                                <TextBlock Text="日志保存文件夹" DockPanel.Dock="Left"/>
                                <Button Content="选择" DockPanel.Dock="Right"  Click="SelectPathButton_Click"/>
                                <TextBox x:Name="LogDirPath" Text="XMSC_LOG"/>
                            </DockPanel>
                            <DockPanel>
                                <TextBlock Text="日志文件名" DockPanel.Dock="Left"/>
                                <TextBox x:Name="LogFileName" Text="%StartDate%.log"/>
                            </DockPanel>
                            <DockPanel>
                                <TextBlock Text="日志保存条件:" />
                                <Button DockPanel.Dock="Right" HorizontalAlignment="Right" Content="添加" Click="AddLogFilterButton_Click"  />
                            </DockPanel>
                            <ListView x:Name="LogFilderList">
                                <ListView.ItemTemplate>
                                    <DataTemplate>
                                        <Grid Width="{Binding ActualWidth, ElementName=widmodel, Mode=OneWay}" >
                                            <Grid Margin="0,-1,-83,-4">
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*"/>
                                                    <ColumnDefinition Width="Auto"/>
                                                </Grid.ColumnDefinitions>
                                                <DockPanel>
                                                    <ComboBox SelectedIndex="{Binding Type}" VerticalAlignment="Center">
                                                        <ComboBoxItem  Content="包含文本"/>
                                                        <ComboBoxItem  Content="不包含文本"/>
                                                        <ComboBoxItem  Content="正则匹配"/>
                                                        <ComboBoxItem  Content="正则不匹配"/>
                                                    </ComboBox>
                                                    <TextBox Text="{Binding Value}" Margin="3,0,5,0" Tag="{Binding Uuid}"/>
                                                </DockPanel>
                                                <Button Content="删除" HorizontalAlignment="Right" Grid.Column="1" Margin="0,2,2,2" Tag="{Binding Uuid}" Click="DelLogFilterButton_Click"/>
                                            </Grid>
                                        </Grid>
                                    </DataTemplate>
                                </ListView.ItemTemplate>
                            </ListView>
                            <!--<DockPanel>
                            <TextBlock Text="控制台输出编码:"/>
                            <TextBox Text="UTF-8"/>
                        </DockPanel>-->
                        </StackPanel>
                    </StackPanel>
                </GroupBox>
                <!--#region 高级参数-->
                <GroupBox>
                    <GroupBox.Header>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Text="高级参数:" FontSize="16"/>
                        </StackPanel>
                    </GroupBox.Header>
                    <StackPanel>
                        <DockPanel>
                            <TextBlock Text="控制台输出编码:"/>
                            <TextBox  x:Name="outputEncodingCB"  Text="UTF-8"/>
                        </DockPanel>
                        <DockPanel>
                            <TextBlock Text="控制台输入编码转换"/>
                            <CheckBox   x:Name="InPutEncodingConverntCB"   />
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="From:" Margin="2,4,2,3"/>
                                <TextBox  x:Name="inputEncodingCBF"  Text="UTF-8" Grid.Column="1"/>
                                <TextBlock Text="To:" Grid.Column="2" Margin="2,4,2,3"/>
                                <TextBox  x:Name="inputEncodingCBT"  Grid.Column ="3" Text="GBK"/>
                            </Grid>
                        </DockPanel>
                        <DockPanel>
                            <TextBlock Text="终止命令(请务必正确填写):"/>
                            <TextBox  x:Name="exitCMD"  Text="stop"/>
                        </DockPanel>
                        <DockPanel>
                            <TextBlock Text="快速重启按钮"/>
                            <CheckBox  IsChecked="True" x:Name="rbtshow" />
                        </DockPanel>
                    </StackPanel>
                </GroupBox>
            </StackPanel>
        </ScrollViewer>
    </DockPanel>
</Page>
